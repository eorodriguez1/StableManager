@model IEnumerable<StableManager.Models.Transaction>

@{
    ViewData["Title"] = "Transactions by";
    Layout = "~/Views/Shared/_MenuLayout.cshtml";
    double RunningTotal = 0;
 }

<h2>@ViewBag.Title @ViewBag.BillToName</h2>

<div class="row">
    <p class="col-lg-12 col-md-12 col-sm-12">
        <a asp-action="ManageByUser">Transactions By User</a> |
        <a asp-action="ManageCurrent">Current Transactions</a> |
        <a asp-action="ManageTransactions">All Transactions</a>

    </p>
</div>


<h4> Current Transactions (@DateTime.Now.ToString("MMMM yyyy"))</h4>
<a class="btn btn-primary pull-left" asp-action="Create" asp-route-id="@ViewBag.BillToID">Create new Transaction</a>
<a class="btn btn-primary pull-right disabled" asp-action="GenerateTransactions" asp-route-id="@ViewBag.BillToID">Generate Monthly Transactions</a>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TransactionNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserCharged)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionMadeOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionAdditionalDescription)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @if (!((item.TransactionMadeOn.Value.Month >= DateTime.Now.Month) & (item.TransactionMadeOn.Value.Year >= DateTime.Now.Year)))
            {
                break;
            }
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionNumber)</a>
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.UserCharged.FullName)</a>
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionType.TransactionTypeName)</a>
                </td>
                <td class="@( item.TransactionValue < 0 ? "Negative-Value" : "")">
                    <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionValue)</a>
                    @{RunningTotal += item.TransactionValue;}
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionMadeOn)</a>
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionAdditionalDescription)</a>
                </td>
            </tr>


        }
    </tbody>
</table>



<h4> Previous Transactions</h4>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TransactionNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserCharged)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionMadeOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionAdditionalDescription)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @if (!((item.TransactionMadeOn.Value.Month >= DateTime.Now.Month) & (item.TransactionMadeOn.Value.Year >= DateTime.Now.Year)))
            {
                <tr>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionNumber)</a>
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.UserCharged.FullName)</a>
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionType.TransactionTypeName)</a>
                    </td>
                    <td class="@( item.TransactionValue < 0 ? "Negative-Value" : "")">
                        <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionValue)</a>
                        @{RunningTotal += item.TransactionValue;}
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionMadeOn)</a>
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.TransactionID">@Html.DisplayFor(modelItem => item.TransactionAdditionalDescription)</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


<div class="pull-right">
    <strong> Transaction Total: </strong> <span style="@(@RunningTotal < 0 ? "color:red": "")"> @RunningTotal</span>
</div>

<script language="javascript">
    var menuItem = document.getElementById("ManageTransactions").className = "active";
</script>